// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: genomicsdb_import_config.proto

package com.intel.genomicsdb;

public final class GenomicsDBImportConfiguration {
  private GenomicsDBImportConfiguration() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PartitionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Partition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 begin = 1;</code>
     */
    boolean hasBegin();
    /**
     * <code>required int64 begin = 1;</code>
     */
    long getBegin();

    /**
     * <code>optional string workspace = 2;</code>
     */
    boolean hasWorkspace();
    /**
     * <code>optional string workspace = 2;</code>
     */
    java.lang.String getWorkspace();
    /**
     * <code>optional string workspace = 2;</code>
     */
    com.google.protobuf.ByteString
        getWorkspaceBytes();

    /**
     * <code>optional string array = 3;</code>
     */
    boolean hasArray();
    /**
     * <code>optional string array = 3;</code>
     */
    java.lang.String getArray();
    /**
     * <code>optional string array = 3;</code>
     */
    com.google.protobuf.ByteString
        getArrayBytes();

    /**
     * <code>optional string vcf_output_filename = 4;</code>
     */
    boolean hasVcfOutputFilename();
    /**
     * <code>optional string vcf_output_filename = 4;</code>
     */
    java.lang.String getVcfOutputFilename();
    /**
     * <code>optional string vcf_output_filename = 4;</code>
     */
    com.google.protobuf.ByteString
        getVcfOutputFilenameBytes();

    /**
     * <code>optional int64 end = 5 [default = 9223372036854775807];</code>
     */
    boolean hasEnd();
    /**
     * <code>optional int64 end = 5 [default = 9223372036854775807];</code>
     */
    long getEnd();
  }
  /**
   * Protobuf type {@code Partition}
   */
  public  static final class Partition extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Partition)
      PartitionOrBuilder {
    // Use Partition.newBuilder() to construct.
    private Partition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Partition() {
      begin_ = 0L;
      workspace_ = "";
      array_ = "";
      vcfOutputFilename_ = "";
      end_ = 9223372036854775807L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Partition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              begin_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              workspace_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              array_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              vcfOutputFilename_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              end_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.intel.genomicsdb.GenomicsDBImportConfiguration.internal_static_Partition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.intel.genomicsdb.GenomicsDBImportConfiguration.internal_static_Partition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.class, com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder.class);
    }

    private int bitField0_;
    public static final int BEGIN_FIELD_NUMBER = 1;
    private long begin_;
    /**
     * <code>required int64 begin = 1;</code>
     */
    public boolean hasBegin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 begin = 1;</code>
     */
    public long getBegin() {
      return begin_;
    }

    public static final int WORKSPACE_FIELD_NUMBER = 2;
    private volatile java.lang.Object workspace_;
    /**
     * <code>optional string workspace = 2;</code>
     */
    public boolean hasWorkspace() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string workspace = 2;</code>
     */
    public java.lang.String getWorkspace() {
      java.lang.Object ref = workspace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workspace_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string workspace = 2;</code>
     */
    public com.google.protobuf.ByteString
        getWorkspaceBytes() {
      java.lang.Object ref = workspace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workspace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ARRAY_FIELD_NUMBER = 3;
    private volatile java.lang.Object array_;
    /**
     * <code>optional string array = 3;</code>
     */
    public boolean hasArray() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string array = 3;</code>
     */
    public java.lang.String getArray() {
      java.lang.Object ref = array_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          array_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string array = 3;</code>
     */
    public com.google.protobuf.ByteString
        getArrayBytes() {
      java.lang.Object ref = array_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        array_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VCF_OUTPUT_FILENAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object vcfOutputFilename_;
    /**
     * <code>optional string vcf_output_filename = 4;</code>
     */
    public boolean hasVcfOutputFilename() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string vcf_output_filename = 4;</code>
     */
    public java.lang.String getVcfOutputFilename() {
      java.lang.Object ref = vcfOutputFilename_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vcfOutputFilename_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string vcf_output_filename = 4;</code>
     */
    public com.google.protobuf.ByteString
        getVcfOutputFilenameBytes() {
      java.lang.Object ref = vcfOutputFilename_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vcfOutputFilename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int END_FIELD_NUMBER = 5;
    private long end_;
    /**
     * <code>optional int64 end = 5 [default = 9223372036854775807];</code>
     */
    public boolean hasEnd() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 end = 5 [default = 9223372036854775807];</code>
     */
    public long getEnd() {
      return end_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBegin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, begin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, workspace_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, array_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, vcfOutputFilename_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, end_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, begin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, workspace_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, array_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, vcfOutputFilename_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, end_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Partition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Partition)
        com.intel.genomicsdb.GenomicsDBImportConfiguration.PartitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.intel.genomicsdb.GenomicsDBImportConfiguration.internal_static_Partition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.intel.genomicsdb.GenomicsDBImportConfiguration.internal_static_Partition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.class, com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder.class);
      }

      // Construct using com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        begin_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        workspace_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        array_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        vcfOutputFilename_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        end_ = 9223372036854775807L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.intel.genomicsdb.GenomicsDBImportConfiguration.internal_static_Partition_descriptor;
      }

      public com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition getDefaultInstanceForType() {
        return com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.getDefaultInstance();
      }

      public com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition build() {
        com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition buildPartial() {
        com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition result = new com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.begin_ = begin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.workspace_ = workspace_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.array_ = array_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.vcfOutputFilename_ = vcfOutputFilename_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.end_ = end_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition) {
          return mergeFrom((com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition other) {
        if (other == com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.getDefaultInstance()) return this;
        if (other.hasBegin()) {
          setBegin(other.getBegin());
        }
        if (other.hasWorkspace()) {
          bitField0_ |= 0x00000002;
          workspace_ = other.workspace_;
          onChanged();
        }
        if (other.hasArray()) {
          bitField0_ |= 0x00000004;
          array_ = other.array_;
          onChanged();
        }
        if (other.hasVcfOutputFilename()) {
          bitField0_ |= 0x00000008;
          vcfOutputFilename_ = other.vcfOutputFilename_;
          onChanged();
        }
        if (other.hasEnd()) {
          setEnd(other.getEnd());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBegin()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long begin_ ;
      /**
       * <code>required int64 begin = 1;</code>
       */
      public boolean hasBegin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 begin = 1;</code>
       */
      public long getBegin() {
        return begin_;
      }
      /**
       * <code>required int64 begin = 1;</code>
       */
      public Builder setBegin(long value) {
        bitField0_ |= 0x00000001;
        begin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 begin = 1;</code>
       */
      public Builder clearBegin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        begin_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object workspace_ = "";
      /**
       * <code>optional string workspace = 2;</code>
       */
      public boolean hasWorkspace() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string workspace = 2;</code>
       */
      public java.lang.String getWorkspace() {
        java.lang.Object ref = workspace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            workspace_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string workspace = 2;</code>
       */
      public com.google.protobuf.ByteString
          getWorkspaceBytes() {
        java.lang.Object ref = workspace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workspace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string workspace = 2;</code>
       */
      public Builder setWorkspace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        workspace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string workspace = 2;</code>
       */
      public Builder clearWorkspace() {
        bitField0_ = (bitField0_ & ~0x00000002);
        workspace_ = getDefaultInstance().getWorkspace();
        onChanged();
        return this;
      }
      /**
       * <code>optional string workspace = 2;</code>
       */
      public Builder setWorkspaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        workspace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object array_ = "";
      /**
       * <code>optional string array = 3;</code>
       */
      public boolean hasArray() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string array = 3;</code>
       */
      public java.lang.String getArray() {
        java.lang.Object ref = array_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            array_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string array = 3;</code>
       */
      public com.google.protobuf.ByteString
          getArrayBytes() {
        java.lang.Object ref = array_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          array_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string array = 3;</code>
       */
      public Builder setArray(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        array_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string array = 3;</code>
       */
      public Builder clearArray() {
        bitField0_ = (bitField0_ & ~0x00000004);
        array_ = getDefaultInstance().getArray();
        onChanged();
        return this;
      }
      /**
       * <code>optional string array = 3;</code>
       */
      public Builder setArrayBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        array_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object vcfOutputFilename_ = "";
      /**
       * <code>optional string vcf_output_filename = 4;</code>
       */
      public boolean hasVcfOutputFilename() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string vcf_output_filename = 4;</code>
       */
      public java.lang.String getVcfOutputFilename() {
        java.lang.Object ref = vcfOutputFilename_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            vcfOutputFilename_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string vcf_output_filename = 4;</code>
       */
      public com.google.protobuf.ByteString
          getVcfOutputFilenameBytes() {
        java.lang.Object ref = vcfOutputFilename_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vcfOutputFilename_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string vcf_output_filename = 4;</code>
       */
      public Builder setVcfOutputFilename(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        vcfOutputFilename_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string vcf_output_filename = 4;</code>
       */
      public Builder clearVcfOutputFilename() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vcfOutputFilename_ = getDefaultInstance().getVcfOutputFilename();
        onChanged();
        return this;
      }
      /**
       * <code>optional string vcf_output_filename = 4;</code>
       */
      public Builder setVcfOutputFilenameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        vcfOutputFilename_ = value;
        onChanged();
        return this;
      }

      private long end_ = 9223372036854775807L;
      /**
       * <code>optional int64 end = 5 [default = 9223372036854775807];</code>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 end = 5 [default = 9223372036854775807];</code>
       */
      public long getEnd() {
        return end_;
      }
      /**
       * <code>optional int64 end = 5 [default = 9223372036854775807];</code>
       */
      public Builder setEnd(long value) {
        bitField0_ |= 0x00000010;
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 end = 5 [default = 9223372036854775807];</code>
       */
      public Builder clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000010);
        end_ = 9223372036854775807L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Partition)
    }

    // @@protoc_insertion_point(class_scope:Partition)
    private static final com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition();
    }

    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Partition>
        PARSER = new com.google.protobuf.AbstractParser<Partition>() {
      public Partition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Partition(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Partition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Partition> getParserForType() {
      return PARSER;
    }

    public com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImportConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ImportConfiguration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 size_per_column_partition = 7 [default = 10240];</code>
     */
    boolean hasSizePerColumnPartition();
    /**
     * <code>required int64 size_per_column_partition = 7 [default = 10240];</code>
     */
    long getSizePerColumnPartition();

    /**
     * <code>optional bool row_based_partitioning = 1 [default = false];</code>
     */
    boolean hasRowBasedPartitioning();
    /**
     * <code>optional bool row_based_partitioning = 1 [default = false];</code>
     */
    boolean getRowBasedPartitioning();

    /**
     * <code>optional bool produce_combined_vcf = 2 [default = false];</code>
     */
    boolean hasProduceCombinedVcf();
    /**
     * <code>optional bool produce_combined_vcf = 2 [default = false];</code>
     */
    boolean getProduceCombinedVcf();

    /**
     * <code>optional bool produce_tiledb_array = 3 [default = true];</code>
     */
    boolean hasProduceTiledbArray();
    /**
     * <code>optional bool produce_tiledb_array = 3 [default = true];</code>
     */
    boolean getProduceTiledbArray();

    /**
     * <code>repeated .Partition column_partitions = 4;</code>
     */
    java.util.List<com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition> 
        getColumnPartitionsList();
    /**
     * <code>repeated .Partition column_partitions = 4;</code>
     */
    com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition getColumnPartitions(int index);
    /**
     * <code>repeated .Partition column_partitions = 4;</code>
     */
    int getColumnPartitionsCount();
    /**
     * <code>repeated .Partition column_partitions = 4;</code>
     */
    java.util.List<? extends com.intel.genomicsdb.GenomicsDBImportConfiguration.PartitionOrBuilder> 
        getColumnPartitionsOrBuilderList();
    /**
     * <code>repeated .Partition column_partitions = 4;</code>
     */
    com.intel.genomicsdb.GenomicsDBImportConfiguration.PartitionOrBuilder getColumnPartitionsOrBuilder(
        int index);

    /**
     * <code>optional string vid_mapping_file = 5;</code>
     */
    boolean hasVidMappingFile();
    /**
     * <code>optional string vid_mapping_file = 5;</code>
     */
    java.lang.String getVidMappingFile();
    /**
     * <code>optional string vid_mapping_file = 5;</code>
     */
    com.google.protobuf.ByteString
        getVidMappingFileBytes();

    /**
     * <code>optional string callset_mapping_file = 6;</code>
     */
    boolean hasCallsetMappingFile();
    /**
     * <code>optional string callset_mapping_file = 6;</code>
     */
    java.lang.String getCallsetMappingFile();
    /**
     * <code>optional string callset_mapping_file = 6;</code>
     */
    com.google.protobuf.ByteString
        getCallsetMappingFileBytes();

    /**
     * <code>optional bool treat_deletions_as_intervals = 8 [default = true];</code>
     */
    boolean hasTreatDeletionsAsIntervals();
    /**
     * <code>optional bool treat_deletions_as_intervals = 8 [default = true];</code>
     */
    boolean getTreatDeletionsAsIntervals();

    /**
     * <code>optional int32 num_parallel_vcf_files = 9 [default = 1];</code>
     */
    boolean hasNumParallelVcfFiles();
    /**
     * <code>optional int32 num_parallel_vcf_files = 9 [default = 1];</code>
     */
    int getNumParallelVcfFiles();

    /**
     * <code>optional bool delete_and_create_tiledb_array = 10 [default = false];</code>
     */
    boolean hasDeleteAndCreateTiledbArray();
    /**
     * <code>optional bool delete_and_create_tiledb_array = 10 [default = false];</code>
     */
    boolean getDeleteAndCreateTiledbArray();

    /**
     * <code>optional bool do_ping_pong_buffering = 11 [default = true];</code>
     */
    boolean hasDoPingPongBuffering();
    /**
     * <code>optional bool do_ping_pong_buffering = 11 [default = true];</code>
     */
    boolean getDoPingPongBuffering();

    /**
     * <code>optional bool offload_vcf_output_processing = 12 [default = true];</code>
     */
    boolean hasOffloadVcfOutputProcessing();
    /**
     * <code>optional bool offload_vcf_output_processing = 12 [default = true];</code>
     */
    boolean getOffloadVcfOutputProcessing();

    /**
     * <code>optional bool discard_vcf_index = 13 [default = true];</code>
     */
    boolean hasDiscardVcfIndex();
    /**
     * <code>optional bool discard_vcf_index = 13 [default = true];</code>
     */
    boolean getDiscardVcfIndex();

    /**
     * <code>optional int64 segment_size = 14 [default = 10485760];</code>
     */
    boolean hasSegmentSize();
    /**
     * <code>optional int64 segment_size = 14 [default = 10485760];</code>
     */
    long getSegmentSize();

    /**
     * <code>optional bool compress_tiledb_array = 15 [default = true];</code>
     */
    boolean hasCompressTiledbArray();
    /**
     * <code>optional bool compress_tiledb_array = 15 [default = true];</code>
     */
    boolean getCompressTiledbArray();

    /**
     * <code>optional int64 num_cells_per_tile = 16 [default = 1000];</code>
     */
    boolean hasNumCellsPerTile();
    /**
     * <code>optional int64 num_cells_per_tile = 16 [default = 1000];</code>
     */
    long getNumCellsPerTile();
  }
  /**
   * Protobuf type {@code ImportConfiguration}
   */
  public  static final class ImportConfiguration extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ImportConfiguration)
      ImportConfigurationOrBuilder {
    // Use ImportConfiguration.newBuilder() to construct.
    private ImportConfiguration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ImportConfiguration() {
      sizePerColumnPartition_ = 10240L;
      rowBasedPartitioning_ = false;
      produceCombinedVcf_ = false;
      produceTiledbArray_ = true;
      columnPartitions_ = java.util.Collections.emptyList();
      vidMappingFile_ = "";
      callsetMappingFile_ = "";
      treatDeletionsAsIntervals_ = true;
      numParallelVcfFiles_ = 1;
      deleteAndCreateTiledbArray_ = false;
      doPingPongBuffering_ = true;
      offloadVcfOutputProcessing_ = true;
      discardVcfIndex_ = true;
      segmentSize_ = 10485760L;
      compressTiledbArray_ = true;
      numCellsPerTile_ = 1000L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImportConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000002;
              rowBasedPartitioning_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000004;
              produceCombinedVcf_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              produceTiledbArray_ = input.readBool();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                columnPartitions_ = new java.util.ArrayList<com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition>();
                mutable_bitField0_ |= 0x00000010;
              }
              columnPartitions_.add(input.readMessage(com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.parser(), extensionRegistry));
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              vidMappingFile_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              callsetMappingFile_ = bs;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000001;
              sizePerColumnPartition_ = input.readInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              treatDeletionsAsIntervals_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              numParallelVcfFiles_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              deleteAndCreateTiledbArray_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              doPingPongBuffering_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              offloadVcfOutputProcessing_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              discardVcfIndex_ = input.readBool();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              segmentSize_ = input.readInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              compressTiledbArray_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              numCellsPerTile_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          columnPartitions_ = java.util.Collections.unmodifiableList(columnPartitions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.intel.genomicsdb.GenomicsDBImportConfiguration.internal_static_ImportConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.intel.genomicsdb.GenomicsDBImportConfiguration.internal_static_ImportConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration.class, com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration.Builder.class);
    }

    private int bitField0_;
    public static final int SIZE_PER_COLUMN_PARTITION_FIELD_NUMBER = 7;
    private long sizePerColumnPartition_;
    /**
     * <code>required int64 size_per_column_partition = 7 [default = 10240];</code>
     */
    public boolean hasSizePerColumnPartition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 size_per_column_partition = 7 [default = 10240];</code>
     */
    public long getSizePerColumnPartition() {
      return sizePerColumnPartition_;
    }

    public static final int ROW_BASED_PARTITIONING_FIELD_NUMBER = 1;
    private boolean rowBasedPartitioning_;
    /**
     * <code>optional bool row_based_partitioning = 1 [default = false];</code>
     */
    public boolean hasRowBasedPartitioning() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool row_based_partitioning = 1 [default = false];</code>
     */
    public boolean getRowBasedPartitioning() {
      return rowBasedPartitioning_;
    }

    public static final int PRODUCE_COMBINED_VCF_FIELD_NUMBER = 2;
    private boolean produceCombinedVcf_;
    /**
     * <code>optional bool produce_combined_vcf = 2 [default = false];</code>
     */
    public boolean hasProduceCombinedVcf() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool produce_combined_vcf = 2 [default = false];</code>
     */
    public boolean getProduceCombinedVcf() {
      return produceCombinedVcf_;
    }

    public static final int PRODUCE_TILEDB_ARRAY_FIELD_NUMBER = 3;
    private boolean produceTiledbArray_;
    /**
     * <code>optional bool produce_tiledb_array = 3 [default = true];</code>
     */
    public boolean hasProduceTiledbArray() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool produce_tiledb_array = 3 [default = true];</code>
     */
    public boolean getProduceTiledbArray() {
      return produceTiledbArray_;
    }

    public static final int COLUMN_PARTITIONS_FIELD_NUMBER = 4;
    private java.util.List<com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition> columnPartitions_;
    /**
     * <code>repeated .Partition column_partitions = 4;</code>
     */
    public java.util.List<com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition> getColumnPartitionsList() {
      return columnPartitions_;
    }
    /**
     * <code>repeated .Partition column_partitions = 4;</code>
     */
    public java.util.List<? extends com.intel.genomicsdb.GenomicsDBImportConfiguration.PartitionOrBuilder> 
        getColumnPartitionsOrBuilderList() {
      return columnPartitions_;
    }
    /**
     * <code>repeated .Partition column_partitions = 4;</code>
     */
    public int getColumnPartitionsCount() {
      return columnPartitions_.size();
    }
    /**
     * <code>repeated .Partition column_partitions = 4;</code>
     */
    public com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition getColumnPartitions(int index) {
      return columnPartitions_.get(index);
    }
    /**
     * <code>repeated .Partition column_partitions = 4;</code>
     */
    public com.intel.genomicsdb.GenomicsDBImportConfiguration.PartitionOrBuilder getColumnPartitionsOrBuilder(
        int index) {
      return columnPartitions_.get(index);
    }

    public static final int VID_MAPPING_FILE_FIELD_NUMBER = 5;
    private volatile java.lang.Object vidMappingFile_;
    /**
     * <code>optional string vid_mapping_file = 5;</code>
     */
    public boolean hasVidMappingFile() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string vid_mapping_file = 5;</code>
     */
    public java.lang.String getVidMappingFile() {
      java.lang.Object ref = vidMappingFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vidMappingFile_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string vid_mapping_file = 5;</code>
     */
    public com.google.protobuf.ByteString
        getVidMappingFileBytes() {
      java.lang.Object ref = vidMappingFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vidMappingFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CALLSET_MAPPING_FILE_FIELD_NUMBER = 6;
    private volatile java.lang.Object callsetMappingFile_;
    /**
     * <code>optional string callset_mapping_file = 6;</code>
     */
    public boolean hasCallsetMappingFile() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string callset_mapping_file = 6;</code>
     */
    public java.lang.String getCallsetMappingFile() {
      java.lang.Object ref = callsetMappingFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          callsetMappingFile_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string callset_mapping_file = 6;</code>
     */
    public com.google.protobuf.ByteString
        getCallsetMappingFileBytes() {
      java.lang.Object ref = callsetMappingFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        callsetMappingFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TREAT_DELETIONS_AS_INTERVALS_FIELD_NUMBER = 8;
    private boolean treatDeletionsAsIntervals_;
    /**
     * <code>optional bool treat_deletions_as_intervals = 8 [default = true];</code>
     */
    public boolean hasTreatDeletionsAsIntervals() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool treat_deletions_as_intervals = 8 [default = true];</code>
     */
    public boolean getTreatDeletionsAsIntervals() {
      return treatDeletionsAsIntervals_;
    }

    public static final int NUM_PARALLEL_VCF_FILES_FIELD_NUMBER = 9;
    private int numParallelVcfFiles_;
    /**
     * <code>optional int32 num_parallel_vcf_files = 9 [default = 1];</code>
     */
    public boolean hasNumParallelVcfFiles() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 num_parallel_vcf_files = 9 [default = 1];</code>
     */
    public int getNumParallelVcfFiles() {
      return numParallelVcfFiles_;
    }

    public static final int DELETE_AND_CREATE_TILEDB_ARRAY_FIELD_NUMBER = 10;
    private boolean deleteAndCreateTiledbArray_;
    /**
     * <code>optional bool delete_and_create_tiledb_array = 10 [default = false];</code>
     */
    public boolean hasDeleteAndCreateTiledbArray() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool delete_and_create_tiledb_array = 10 [default = false];</code>
     */
    public boolean getDeleteAndCreateTiledbArray() {
      return deleteAndCreateTiledbArray_;
    }

    public static final int DO_PING_PONG_BUFFERING_FIELD_NUMBER = 11;
    private boolean doPingPongBuffering_;
    /**
     * <code>optional bool do_ping_pong_buffering = 11 [default = true];</code>
     */
    public boolean hasDoPingPongBuffering() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool do_ping_pong_buffering = 11 [default = true];</code>
     */
    public boolean getDoPingPongBuffering() {
      return doPingPongBuffering_;
    }

    public static final int OFFLOAD_VCF_OUTPUT_PROCESSING_FIELD_NUMBER = 12;
    private boolean offloadVcfOutputProcessing_;
    /**
     * <code>optional bool offload_vcf_output_processing = 12 [default = true];</code>
     */
    public boolean hasOffloadVcfOutputProcessing() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool offload_vcf_output_processing = 12 [default = true];</code>
     */
    public boolean getOffloadVcfOutputProcessing() {
      return offloadVcfOutputProcessing_;
    }

    public static final int DISCARD_VCF_INDEX_FIELD_NUMBER = 13;
    private boolean discardVcfIndex_;
    /**
     * <code>optional bool discard_vcf_index = 13 [default = true];</code>
     */
    public boolean hasDiscardVcfIndex() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool discard_vcf_index = 13 [default = true];</code>
     */
    public boolean getDiscardVcfIndex() {
      return discardVcfIndex_;
    }

    public static final int SEGMENT_SIZE_FIELD_NUMBER = 14;
    private long segmentSize_;
    /**
     * <code>optional int64 segment_size = 14 [default = 10485760];</code>
     */
    public boolean hasSegmentSize() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int64 segment_size = 14 [default = 10485760];</code>
     */
    public long getSegmentSize() {
      return segmentSize_;
    }

    public static final int COMPRESS_TILEDB_ARRAY_FIELD_NUMBER = 15;
    private boolean compressTiledbArray_;
    /**
     * <code>optional bool compress_tiledb_array = 15 [default = true];</code>
     */
    public boolean hasCompressTiledbArray() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool compress_tiledb_array = 15 [default = true];</code>
     */
    public boolean getCompressTiledbArray() {
      return compressTiledbArray_;
    }

    public static final int NUM_CELLS_PER_TILE_FIELD_NUMBER = 16;
    private long numCellsPerTile_;
    /**
     * <code>optional int64 num_cells_per_tile = 16 [default = 1000];</code>
     */
    public boolean hasNumCellsPerTile() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 num_cells_per_tile = 16 [default = 1000];</code>
     */
    public long getNumCellsPerTile() {
      return numCellsPerTile_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSizePerColumnPartition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getColumnPartitionsCount(); i++) {
        if (!getColumnPartitions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(1, rowBasedPartitioning_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(2, produceCombinedVcf_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(3, produceTiledbArray_);
      }
      for (int i = 0; i < columnPartitions_.size(); i++) {
        output.writeMessage(4, columnPartitions_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, vidMappingFile_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, callsetMappingFile_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(7, sizePerColumnPartition_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, treatDeletionsAsIntervals_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, numParallelVcfFiles_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(10, deleteAndCreateTiledbArray_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(11, doPingPongBuffering_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(12, offloadVcfOutputProcessing_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(13, discardVcfIndex_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(14, segmentSize_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(15, compressTiledbArray_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(16, numCellsPerTile_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, rowBasedPartitioning_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, produceCombinedVcf_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, produceTiledbArray_);
      }
      for (int i = 0; i < columnPartitions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, columnPartitions_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, vidMappingFile_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, callsetMappingFile_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, sizePerColumnPartition_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, treatDeletionsAsIntervals_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, numParallelVcfFiles_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, deleteAndCreateTiledbArray_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, doPingPongBuffering_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, offloadVcfOutputProcessing_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, discardVcfIndex_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, segmentSize_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, compressTiledbArray_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, numCellsPerTile_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ImportConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ImportConfiguration)
        com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.intel.genomicsdb.GenomicsDBImportConfiguration.internal_static_ImportConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.intel.genomicsdb.GenomicsDBImportConfiguration.internal_static_ImportConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration.class, com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration.Builder.class);
      }

      // Construct using com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getColumnPartitionsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        sizePerColumnPartition_ = 10240L;
        bitField0_ = (bitField0_ & ~0x00000001);
        rowBasedPartitioning_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        produceCombinedVcf_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        produceTiledbArray_ = true;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (columnPartitionsBuilder_ == null) {
          columnPartitions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          columnPartitionsBuilder_.clear();
        }
        vidMappingFile_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        callsetMappingFile_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        treatDeletionsAsIntervals_ = true;
        bitField0_ = (bitField0_ & ~0x00000080);
        numParallelVcfFiles_ = 1;
        bitField0_ = (bitField0_ & ~0x00000100);
        deleteAndCreateTiledbArray_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        doPingPongBuffering_ = true;
        bitField0_ = (bitField0_ & ~0x00000400);
        offloadVcfOutputProcessing_ = true;
        bitField0_ = (bitField0_ & ~0x00000800);
        discardVcfIndex_ = true;
        bitField0_ = (bitField0_ & ~0x00001000);
        segmentSize_ = 10485760L;
        bitField0_ = (bitField0_ & ~0x00002000);
        compressTiledbArray_ = true;
        bitField0_ = (bitField0_ & ~0x00004000);
        numCellsPerTile_ = 1000L;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.intel.genomicsdb.GenomicsDBImportConfiguration.internal_static_ImportConfiguration_descriptor;
      }

      public com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration getDefaultInstanceForType() {
        return com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration.getDefaultInstance();
      }

      public com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration build() {
        com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration buildPartial() {
        com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration result = new com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sizePerColumnPartition_ = sizePerColumnPartition_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rowBasedPartitioning_ = rowBasedPartitioning_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.produceCombinedVcf_ = produceCombinedVcf_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.produceTiledbArray_ = produceTiledbArray_;
        if (columnPartitionsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            columnPartitions_ = java.util.Collections.unmodifiableList(columnPartitions_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.columnPartitions_ = columnPartitions_;
        } else {
          result.columnPartitions_ = columnPartitionsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.vidMappingFile_ = vidMappingFile_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.callsetMappingFile_ = callsetMappingFile_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.treatDeletionsAsIntervals_ = treatDeletionsAsIntervals_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.numParallelVcfFiles_ = numParallelVcfFiles_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.deleteAndCreateTiledbArray_ = deleteAndCreateTiledbArray_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.doPingPongBuffering_ = doPingPongBuffering_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.offloadVcfOutputProcessing_ = offloadVcfOutputProcessing_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.discardVcfIndex_ = discardVcfIndex_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.segmentSize_ = segmentSize_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.compressTiledbArray_ = compressTiledbArray_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.numCellsPerTile_ = numCellsPerTile_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration) {
          return mergeFrom((com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration other) {
        if (other == com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration.getDefaultInstance()) return this;
        if (other.hasSizePerColumnPartition()) {
          setSizePerColumnPartition(other.getSizePerColumnPartition());
        }
        if (other.hasRowBasedPartitioning()) {
          setRowBasedPartitioning(other.getRowBasedPartitioning());
        }
        if (other.hasProduceCombinedVcf()) {
          setProduceCombinedVcf(other.getProduceCombinedVcf());
        }
        if (other.hasProduceTiledbArray()) {
          setProduceTiledbArray(other.getProduceTiledbArray());
        }
        if (columnPartitionsBuilder_ == null) {
          if (!other.columnPartitions_.isEmpty()) {
            if (columnPartitions_.isEmpty()) {
              columnPartitions_ = other.columnPartitions_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureColumnPartitionsIsMutable();
              columnPartitions_.addAll(other.columnPartitions_);
            }
            onChanged();
          }
        } else {
          if (!other.columnPartitions_.isEmpty()) {
            if (columnPartitionsBuilder_.isEmpty()) {
              columnPartitionsBuilder_.dispose();
              columnPartitionsBuilder_ = null;
              columnPartitions_ = other.columnPartitions_;
              bitField0_ = (bitField0_ & ~0x00000010);
              columnPartitionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getColumnPartitionsFieldBuilder() : null;
            } else {
              columnPartitionsBuilder_.addAllMessages(other.columnPartitions_);
            }
          }
        }
        if (other.hasVidMappingFile()) {
          bitField0_ |= 0x00000020;
          vidMappingFile_ = other.vidMappingFile_;
          onChanged();
        }
        if (other.hasCallsetMappingFile()) {
          bitField0_ |= 0x00000040;
          callsetMappingFile_ = other.callsetMappingFile_;
          onChanged();
        }
        if (other.hasTreatDeletionsAsIntervals()) {
          setTreatDeletionsAsIntervals(other.getTreatDeletionsAsIntervals());
        }
        if (other.hasNumParallelVcfFiles()) {
          setNumParallelVcfFiles(other.getNumParallelVcfFiles());
        }
        if (other.hasDeleteAndCreateTiledbArray()) {
          setDeleteAndCreateTiledbArray(other.getDeleteAndCreateTiledbArray());
        }
        if (other.hasDoPingPongBuffering()) {
          setDoPingPongBuffering(other.getDoPingPongBuffering());
        }
        if (other.hasOffloadVcfOutputProcessing()) {
          setOffloadVcfOutputProcessing(other.getOffloadVcfOutputProcessing());
        }
        if (other.hasDiscardVcfIndex()) {
          setDiscardVcfIndex(other.getDiscardVcfIndex());
        }
        if (other.hasSegmentSize()) {
          setSegmentSize(other.getSegmentSize());
        }
        if (other.hasCompressTiledbArray()) {
          setCompressTiledbArray(other.getCompressTiledbArray());
        }
        if (other.hasNumCellsPerTile()) {
          setNumCellsPerTile(other.getNumCellsPerTile());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSizePerColumnPartition()) {
          return false;
        }
        for (int i = 0; i < getColumnPartitionsCount(); i++) {
          if (!getColumnPartitions(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long sizePerColumnPartition_ = 10240L;
      /**
       * <code>required int64 size_per_column_partition = 7 [default = 10240];</code>
       */
      public boolean hasSizePerColumnPartition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 size_per_column_partition = 7 [default = 10240];</code>
       */
      public long getSizePerColumnPartition() {
        return sizePerColumnPartition_;
      }
      /**
       * <code>required int64 size_per_column_partition = 7 [default = 10240];</code>
       */
      public Builder setSizePerColumnPartition(long value) {
        bitField0_ |= 0x00000001;
        sizePerColumnPartition_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 size_per_column_partition = 7 [default = 10240];</code>
       */
      public Builder clearSizePerColumnPartition() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sizePerColumnPartition_ = 10240L;
        onChanged();
        return this;
      }

      private boolean rowBasedPartitioning_ ;
      /**
       * <code>optional bool row_based_partitioning = 1 [default = false];</code>
       */
      public boolean hasRowBasedPartitioning() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool row_based_partitioning = 1 [default = false];</code>
       */
      public boolean getRowBasedPartitioning() {
        return rowBasedPartitioning_;
      }
      /**
       * <code>optional bool row_based_partitioning = 1 [default = false];</code>
       */
      public Builder setRowBasedPartitioning(boolean value) {
        bitField0_ |= 0x00000002;
        rowBasedPartitioning_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool row_based_partitioning = 1 [default = false];</code>
       */
      public Builder clearRowBasedPartitioning() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rowBasedPartitioning_ = false;
        onChanged();
        return this;
      }

      private boolean produceCombinedVcf_ ;
      /**
       * <code>optional bool produce_combined_vcf = 2 [default = false];</code>
       */
      public boolean hasProduceCombinedVcf() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool produce_combined_vcf = 2 [default = false];</code>
       */
      public boolean getProduceCombinedVcf() {
        return produceCombinedVcf_;
      }
      /**
       * <code>optional bool produce_combined_vcf = 2 [default = false];</code>
       */
      public Builder setProduceCombinedVcf(boolean value) {
        bitField0_ |= 0x00000004;
        produceCombinedVcf_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool produce_combined_vcf = 2 [default = false];</code>
       */
      public Builder clearProduceCombinedVcf() {
        bitField0_ = (bitField0_ & ~0x00000004);
        produceCombinedVcf_ = false;
        onChanged();
        return this;
      }

      private boolean produceTiledbArray_ = true;
      /**
       * <code>optional bool produce_tiledb_array = 3 [default = true];</code>
       */
      public boolean hasProduceTiledbArray() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool produce_tiledb_array = 3 [default = true];</code>
       */
      public boolean getProduceTiledbArray() {
        return produceTiledbArray_;
      }
      /**
       * <code>optional bool produce_tiledb_array = 3 [default = true];</code>
       */
      public Builder setProduceTiledbArray(boolean value) {
        bitField0_ |= 0x00000008;
        produceTiledbArray_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool produce_tiledb_array = 3 [default = true];</code>
       */
      public Builder clearProduceTiledbArray() {
        bitField0_ = (bitField0_ & ~0x00000008);
        produceTiledbArray_ = true;
        onChanged();
        return this;
      }

      private java.util.List<com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition> columnPartitions_ =
        java.util.Collections.emptyList();
      private void ensureColumnPartitionsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          columnPartitions_ = new java.util.ArrayList<com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition>(columnPartitions_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition, com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder, com.intel.genomicsdb.GenomicsDBImportConfiguration.PartitionOrBuilder> columnPartitionsBuilder_;

      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public java.util.List<com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition> getColumnPartitionsList() {
        if (columnPartitionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(columnPartitions_);
        } else {
          return columnPartitionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public int getColumnPartitionsCount() {
        if (columnPartitionsBuilder_ == null) {
          return columnPartitions_.size();
        } else {
          return columnPartitionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition getColumnPartitions(int index) {
        if (columnPartitionsBuilder_ == null) {
          return columnPartitions_.get(index);
        } else {
          return columnPartitionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public Builder setColumnPartitions(
          int index, com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition value) {
        if (columnPartitionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnPartitionsIsMutable();
          columnPartitions_.set(index, value);
          onChanged();
        } else {
          columnPartitionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public Builder setColumnPartitions(
          int index, com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder builderForValue) {
        if (columnPartitionsBuilder_ == null) {
          ensureColumnPartitionsIsMutable();
          columnPartitions_.set(index, builderForValue.build());
          onChanged();
        } else {
          columnPartitionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public Builder addColumnPartitions(com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition value) {
        if (columnPartitionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnPartitionsIsMutable();
          columnPartitions_.add(value);
          onChanged();
        } else {
          columnPartitionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public Builder addColumnPartitions(
          int index, com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition value) {
        if (columnPartitionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnPartitionsIsMutable();
          columnPartitions_.add(index, value);
          onChanged();
        } else {
          columnPartitionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public Builder addColumnPartitions(
          com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder builderForValue) {
        if (columnPartitionsBuilder_ == null) {
          ensureColumnPartitionsIsMutable();
          columnPartitions_.add(builderForValue.build());
          onChanged();
        } else {
          columnPartitionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public Builder addColumnPartitions(
          int index, com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder builderForValue) {
        if (columnPartitionsBuilder_ == null) {
          ensureColumnPartitionsIsMutable();
          columnPartitions_.add(index, builderForValue.build());
          onChanged();
        } else {
          columnPartitionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public Builder addAllColumnPartitions(
          java.lang.Iterable<? extends com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition> values) {
        if (columnPartitionsBuilder_ == null) {
          ensureColumnPartitionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, columnPartitions_);
          onChanged();
        } else {
          columnPartitionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public Builder clearColumnPartitions() {
        if (columnPartitionsBuilder_ == null) {
          columnPartitions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          columnPartitionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public Builder removeColumnPartitions(int index) {
        if (columnPartitionsBuilder_ == null) {
          ensureColumnPartitionsIsMutable();
          columnPartitions_.remove(index);
          onChanged();
        } else {
          columnPartitionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder getColumnPartitionsBuilder(
          int index) {
        return getColumnPartitionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public com.intel.genomicsdb.GenomicsDBImportConfiguration.PartitionOrBuilder getColumnPartitionsOrBuilder(
          int index) {
        if (columnPartitionsBuilder_ == null) {
          return columnPartitions_.get(index);  } else {
          return columnPartitionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public java.util.List<? extends com.intel.genomicsdb.GenomicsDBImportConfiguration.PartitionOrBuilder> 
           getColumnPartitionsOrBuilderList() {
        if (columnPartitionsBuilder_ != null) {
          return columnPartitionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(columnPartitions_);
        }
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder addColumnPartitionsBuilder() {
        return getColumnPartitionsFieldBuilder().addBuilder(
            com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.getDefaultInstance());
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder addColumnPartitionsBuilder(
          int index) {
        return getColumnPartitionsFieldBuilder().addBuilder(
            index, com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.getDefaultInstance());
      }
      /**
       * <code>repeated .Partition column_partitions = 4;</code>
       */
      public java.util.List<com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder> 
           getColumnPartitionsBuilderList() {
        return getColumnPartitionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition, com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder, com.intel.genomicsdb.GenomicsDBImportConfiguration.PartitionOrBuilder> 
          getColumnPartitionsFieldBuilder() {
        if (columnPartitionsBuilder_ == null) {
          columnPartitionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition, com.intel.genomicsdb.GenomicsDBImportConfiguration.Partition.Builder, com.intel.genomicsdb.GenomicsDBImportConfiguration.PartitionOrBuilder>(
                  columnPartitions_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          columnPartitions_ = null;
        }
        return columnPartitionsBuilder_;
      }

      private java.lang.Object vidMappingFile_ = "";
      /**
       * <code>optional string vid_mapping_file = 5;</code>
       */
      public boolean hasVidMappingFile() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string vid_mapping_file = 5;</code>
       */
      public java.lang.String getVidMappingFile() {
        java.lang.Object ref = vidMappingFile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            vidMappingFile_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string vid_mapping_file = 5;</code>
       */
      public com.google.protobuf.ByteString
          getVidMappingFileBytes() {
        java.lang.Object ref = vidMappingFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vidMappingFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string vid_mapping_file = 5;</code>
       */
      public Builder setVidMappingFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        vidMappingFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string vid_mapping_file = 5;</code>
       */
      public Builder clearVidMappingFile() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vidMappingFile_ = getDefaultInstance().getVidMappingFile();
        onChanged();
        return this;
      }
      /**
       * <code>optional string vid_mapping_file = 5;</code>
       */
      public Builder setVidMappingFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        vidMappingFile_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object callsetMappingFile_ = "";
      /**
       * <code>optional string callset_mapping_file = 6;</code>
       */
      public boolean hasCallsetMappingFile() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string callset_mapping_file = 6;</code>
       */
      public java.lang.String getCallsetMappingFile() {
        java.lang.Object ref = callsetMappingFile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            callsetMappingFile_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string callset_mapping_file = 6;</code>
       */
      public com.google.protobuf.ByteString
          getCallsetMappingFileBytes() {
        java.lang.Object ref = callsetMappingFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          callsetMappingFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string callset_mapping_file = 6;</code>
       */
      public Builder setCallsetMappingFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        callsetMappingFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string callset_mapping_file = 6;</code>
       */
      public Builder clearCallsetMappingFile() {
        bitField0_ = (bitField0_ & ~0x00000040);
        callsetMappingFile_ = getDefaultInstance().getCallsetMappingFile();
        onChanged();
        return this;
      }
      /**
       * <code>optional string callset_mapping_file = 6;</code>
       */
      public Builder setCallsetMappingFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        callsetMappingFile_ = value;
        onChanged();
        return this;
      }

      private boolean treatDeletionsAsIntervals_ = true;
      /**
       * <code>optional bool treat_deletions_as_intervals = 8 [default = true];</code>
       */
      public boolean hasTreatDeletionsAsIntervals() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool treat_deletions_as_intervals = 8 [default = true];</code>
       */
      public boolean getTreatDeletionsAsIntervals() {
        return treatDeletionsAsIntervals_;
      }
      /**
       * <code>optional bool treat_deletions_as_intervals = 8 [default = true];</code>
       */
      public Builder setTreatDeletionsAsIntervals(boolean value) {
        bitField0_ |= 0x00000080;
        treatDeletionsAsIntervals_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool treat_deletions_as_intervals = 8 [default = true];</code>
       */
      public Builder clearTreatDeletionsAsIntervals() {
        bitField0_ = (bitField0_ & ~0x00000080);
        treatDeletionsAsIntervals_ = true;
        onChanged();
        return this;
      }

      private int numParallelVcfFiles_ = 1;
      /**
       * <code>optional int32 num_parallel_vcf_files = 9 [default = 1];</code>
       */
      public boolean hasNumParallelVcfFiles() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 num_parallel_vcf_files = 9 [default = 1];</code>
       */
      public int getNumParallelVcfFiles() {
        return numParallelVcfFiles_;
      }
      /**
       * <code>optional int32 num_parallel_vcf_files = 9 [default = 1];</code>
       */
      public Builder setNumParallelVcfFiles(int value) {
        bitField0_ |= 0x00000100;
        numParallelVcfFiles_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 num_parallel_vcf_files = 9 [default = 1];</code>
       */
      public Builder clearNumParallelVcfFiles() {
        bitField0_ = (bitField0_ & ~0x00000100);
        numParallelVcfFiles_ = 1;
        onChanged();
        return this;
      }

      private boolean deleteAndCreateTiledbArray_ ;
      /**
       * <code>optional bool delete_and_create_tiledb_array = 10 [default = false];</code>
       */
      public boolean hasDeleteAndCreateTiledbArray() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool delete_and_create_tiledb_array = 10 [default = false];</code>
       */
      public boolean getDeleteAndCreateTiledbArray() {
        return deleteAndCreateTiledbArray_;
      }
      /**
       * <code>optional bool delete_and_create_tiledb_array = 10 [default = false];</code>
       */
      public Builder setDeleteAndCreateTiledbArray(boolean value) {
        bitField0_ |= 0x00000200;
        deleteAndCreateTiledbArray_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool delete_and_create_tiledb_array = 10 [default = false];</code>
       */
      public Builder clearDeleteAndCreateTiledbArray() {
        bitField0_ = (bitField0_ & ~0x00000200);
        deleteAndCreateTiledbArray_ = false;
        onChanged();
        return this;
      }

      private boolean doPingPongBuffering_ = true;
      /**
       * <code>optional bool do_ping_pong_buffering = 11 [default = true];</code>
       */
      public boolean hasDoPingPongBuffering() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool do_ping_pong_buffering = 11 [default = true];</code>
       */
      public boolean getDoPingPongBuffering() {
        return doPingPongBuffering_;
      }
      /**
       * <code>optional bool do_ping_pong_buffering = 11 [default = true];</code>
       */
      public Builder setDoPingPongBuffering(boolean value) {
        bitField0_ |= 0x00000400;
        doPingPongBuffering_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool do_ping_pong_buffering = 11 [default = true];</code>
       */
      public Builder clearDoPingPongBuffering() {
        bitField0_ = (bitField0_ & ~0x00000400);
        doPingPongBuffering_ = true;
        onChanged();
        return this;
      }

      private boolean offloadVcfOutputProcessing_ = true;
      /**
       * <code>optional bool offload_vcf_output_processing = 12 [default = true];</code>
       */
      public boolean hasOffloadVcfOutputProcessing() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool offload_vcf_output_processing = 12 [default = true];</code>
       */
      public boolean getOffloadVcfOutputProcessing() {
        return offloadVcfOutputProcessing_;
      }
      /**
       * <code>optional bool offload_vcf_output_processing = 12 [default = true];</code>
       */
      public Builder setOffloadVcfOutputProcessing(boolean value) {
        bitField0_ |= 0x00000800;
        offloadVcfOutputProcessing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool offload_vcf_output_processing = 12 [default = true];</code>
       */
      public Builder clearOffloadVcfOutputProcessing() {
        bitField0_ = (bitField0_ & ~0x00000800);
        offloadVcfOutputProcessing_ = true;
        onChanged();
        return this;
      }

      private boolean discardVcfIndex_ = true;
      /**
       * <code>optional bool discard_vcf_index = 13 [default = true];</code>
       */
      public boolean hasDiscardVcfIndex() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bool discard_vcf_index = 13 [default = true];</code>
       */
      public boolean getDiscardVcfIndex() {
        return discardVcfIndex_;
      }
      /**
       * <code>optional bool discard_vcf_index = 13 [default = true];</code>
       */
      public Builder setDiscardVcfIndex(boolean value) {
        bitField0_ |= 0x00001000;
        discardVcfIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool discard_vcf_index = 13 [default = true];</code>
       */
      public Builder clearDiscardVcfIndex() {
        bitField0_ = (bitField0_ & ~0x00001000);
        discardVcfIndex_ = true;
        onChanged();
        return this;
      }

      private long segmentSize_ = 10485760L;
      /**
       * <code>optional int64 segment_size = 14 [default = 10485760];</code>
       */
      public boolean hasSegmentSize() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int64 segment_size = 14 [default = 10485760];</code>
       */
      public long getSegmentSize() {
        return segmentSize_;
      }
      /**
       * <code>optional int64 segment_size = 14 [default = 10485760];</code>
       */
      public Builder setSegmentSize(long value) {
        bitField0_ |= 0x00002000;
        segmentSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 segment_size = 14 [default = 10485760];</code>
       */
      public Builder clearSegmentSize() {
        bitField0_ = (bitField0_ & ~0x00002000);
        segmentSize_ = 10485760L;
        onChanged();
        return this;
      }

      private boolean compressTiledbArray_ = true;
      /**
       * <code>optional bool compress_tiledb_array = 15 [default = true];</code>
       */
      public boolean hasCompressTiledbArray() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool compress_tiledb_array = 15 [default = true];</code>
       */
      public boolean getCompressTiledbArray() {
        return compressTiledbArray_;
      }
      /**
       * <code>optional bool compress_tiledb_array = 15 [default = true];</code>
       */
      public Builder setCompressTiledbArray(boolean value) {
        bitField0_ |= 0x00004000;
        compressTiledbArray_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool compress_tiledb_array = 15 [default = true];</code>
       */
      public Builder clearCompressTiledbArray() {
        bitField0_ = (bitField0_ & ~0x00004000);
        compressTiledbArray_ = true;
        onChanged();
        return this;
      }

      private long numCellsPerTile_ = 1000L;
      /**
       * <code>optional int64 num_cells_per_tile = 16 [default = 1000];</code>
       */
      public boolean hasNumCellsPerTile() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int64 num_cells_per_tile = 16 [default = 1000];</code>
       */
      public long getNumCellsPerTile() {
        return numCellsPerTile_;
      }
      /**
       * <code>optional int64 num_cells_per_tile = 16 [default = 1000];</code>
       */
      public Builder setNumCellsPerTile(long value) {
        bitField0_ |= 0x00008000;
        numCellsPerTile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 num_cells_per_tile = 16 [default = 1000];</code>
       */
      public Builder clearNumCellsPerTile() {
        bitField0_ = (bitField0_ & ~0x00008000);
        numCellsPerTile_ = 1000L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ImportConfiguration)
    }

    // @@protoc_insertion_point(class_scope:ImportConfiguration)
    private static final com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration();
    }

    public static com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ImportConfiguration>
        PARSER = new com.google.protobuf.AbstractParser<ImportConfiguration>() {
      public ImportConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new ImportConfiguration(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<ImportConfiguration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImportConfiguration> getParserForType() {
      return PARSER;
    }

    public com.intel.genomicsdb.GenomicsDBImportConfiguration.ImportConfiguration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Partition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Partition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ImportConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ImportConfiguration_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036genomicsdb_import_config.proto\"{\n\tPart" +
      "ition\022\r\n\005begin\030\001 \002(\003\022\021\n\tworkspace\030\002 \001(\t\022" +
      "\r\n\005array\030\003 \001(\t\022\033\n\023vcf_output_filename\030\004 " +
      "\001(\t\022 \n\003end\030\005 \001(\003:\0239223372036854775807\"\347\004" +
      "\n\023ImportConfiguration\022(\n\031size_per_column" +
      "_partition\030\007 \002(\003:\00510240\022%\n\026row_based_par" +
      "titioning\030\001 \001(\010:\005false\022#\n\024produce_combin" +
      "ed_vcf\030\002 \001(\010:\005false\022\"\n\024produce_tiledb_ar" +
      "ray\030\003 \001(\010:\004true\022%\n\021column_partitions\030\004 \003" +
      "(\0132\n.Partition\022\030\n\020vid_mapping_file\030\005 \001(\t",
      "\022\034\n\024callset_mapping_file\030\006 \001(\t\022*\n\034treat_" +
      "deletions_as_intervals\030\010 \001(\010:\004true\022!\n\026nu" +
      "m_parallel_vcf_files\030\t \001(\005:\0011\022-\n\036delete_" +
      "and_create_tiledb_array\030\n \001(\010:\005false\022$\n\026" +
      "do_ping_pong_buffering\030\013 \001(\010:\004true\022+\n\035of" +
      "fload_vcf_output_processing\030\014 \001(\010:\004true\022" +
      "\037\n\021discard_vcf_index\030\r \001(\010:\004true\022\036\n\014segm" +
      "ent_size\030\016 \001(\003:\01010485760\022#\n\025compress_til" +
      "edb_array\030\017 \001(\010:\004true\022 \n\022num_cells_per_t" +
      "ile\030\020 \001(\003:\0041000B5\n\024com.intel.genomicsdbB",
      "\035GenomicsDBImportConfiguration"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Partition_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Partition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Partition_descriptor,
        new java.lang.String[] { "Begin", "Workspace", "Array", "VcfOutputFilename", "End", });
    internal_static_ImportConfiguration_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ImportConfiguration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ImportConfiguration_descriptor,
        new java.lang.String[] { "SizePerColumnPartition", "RowBasedPartitioning", "ProduceCombinedVcf", "ProduceTiledbArray", "ColumnPartitions", "VidMappingFile", "CallsetMappingFile", "TreatDeletionsAsIntervals", "NumParallelVcfFiles", "DeleteAndCreateTiledbArray", "DoPingPongBuffering", "OffloadVcfOutputProcessing", "DiscardVcfIndex", "SegmentSize", "CompressTiledbArray", "NumCellsPerTile", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
